[{"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\index.js":"1","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\App.js":"2","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UserProfile\\UserProfile.jsx":"3","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\ArtistProfile.jsx":"4","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UserProfile\\TopGenres.jsx":"5","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\ArtistAlbum.jsx":"6","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UserProfile\\SongList.jsx":"7","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\RelatedArtist.jsx":"8","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\musicBar\\MusicBar.jsx":"9","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\Sidebar\\Sidebar.jsx":"10","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\UploadMusic.jsx":"11","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\AddSongs.jsx":"12","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\MusicDetails.jsx":"13","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\SongInfo.jsx":"14","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadSong\\UploadSong.jsx":"15","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadSong\\MusicDetails.jsx":"16","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadSong\\UploadSongConnect.jsx":"17"},{"size":248,"mtime":1676227142727,"results":"18","hashOfConfig":"19"},{"size":600,"mtime":1676310409015,"results":"20","hashOfConfig":"19"},{"size":7213,"mtime":1676227755828,"results":"21","hashOfConfig":"19"},{"size":6948,"mtime":1676229099168,"results":"22","hashOfConfig":"19"},{"size":473,"mtime":1675738535015,"results":"23","hashOfConfig":"19"},{"size":523,"mtime":1676227142720,"results":"24","hashOfConfig":"19"},{"size":543,"mtime":1675805990250,"results":"25","hashOfConfig":"19"},{"size":363,"mtime":1676227142721,"results":"26","hashOfConfig":"19"},{"size":565,"mtime":1676227142722,"results":"27","hashOfConfig":"19"},{"size":2563,"mtime":1676227142721,"results":"28","hashOfConfig":"19"},{"size":5900,"mtime":1676231617652,"results":"29","hashOfConfig":"19"},{"size":2459,"mtime":1676240105323,"results":"30","hashOfConfig":"19"},{"size":4314,"mtime":1676188084100,"results":"31","hashOfConfig":"19"},{"size":143,"mtime":1676183442474,"results":"32","hashOfConfig":"19"},{"size":5628,"mtime":1676239270542,"results":"33","hashOfConfig":"19"},{"size":6711,"mtime":1676308067596,"results":"34","hashOfConfig":"19"},{"size":11214,"mtime":1676310417570,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"5dorog",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\index.js",[],[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\App.js",["94","95","96","97"],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UserProfile\\UserProfile.jsx",["98","99"],[],"import React, { useEffect, useState } from \"react\";\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport MusicBar from \"../ArtistProfile/musicBar/MusicBar\";\r\nimport SideBar from \"../ArtistProfile/Sidebar/Sidebar\"\r\nimport WavesBG from \"../../Vector.svg\"\r\nimport TopGenre from \"./TopGenres\";\r\nimport topGenres from \"../../data/topgenres.json\";\r\nimport SongList from \"./SongList\";\r\nimport songsList from \"../../data/songslist.json\";\r\nimport  './userProfile.css';\r\n\r\n// This is how the normal users will see the artist profile\r\nexport default function UserProfile(props) {\r\n    const [small, setSmall] = useState(false);\r\n    const [follow, setFollow] = React.useState(false)\r\n    const [followers, setFollowers] = React.useState(200)\r\n    const [following, setFollowing] = React.useState(392)\r\n    const [showMenu, setShowMenu] = React.useState(false)\r\n\r\n    const windowBreakpoint = 480;\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"scroll\", () =>\r\n        setSmall(window.pageYOffset > 200)\r\n      );\r\n    }\r\n  }, []); \r\n\r\n    const useViewport = () => {\r\n    const [width, setWidth] = React.useState(window.innerWidth);\r\n  \r\n    React.useEffect(() => {\r\n      const handleWindowResize = () => setWidth(window.innerWidth);\r\n      window.addEventListener(\"resize\", handleWindowResize);\r\n        if(width > windowBreakpoint) {\r\n        setShowMenu(true); }\r\n        else {\r\n            setShowMenu(false)\r\n        }\r\n\r\n      return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n    }, []);\r\n  \r\n    // Return the width so we can use it in our components\r\n    return { width };\r\n  }\r\n \r\n  const { width } = useViewport();\r\n\r\n  let menu;\r\n  if (showMenu) {\r\n         menu = <SideBar />\r\n\r\n  } \r\n\r\n    function handleClick(event)\r\n        \r\n     {\r\n        const {name} = event.target\r\n\r\n        if(name === \"follow\") {\r\n        setFollow(prevFollow => !prevFollow) \r\n        if(!follow) {\r\n            setFollowers(prevFollowers => prevFollowers+1) \r\n        } else {\r\n            setFollowers(prevFollowers => prevFollowers-1) \r\n        }\r\n\r\n        console.log(follow)\r\n\r\n        } else if(name === \"menu\") {\r\n            setShowMenu(prevShowMenu => !prevShowMenu) \r\n            console.log(name) \r\n            \r\n        }\r\n\r\n        \r\n     };\r\n\r\n    return( \r\n        <section>\r\n        {menu}\r\n        <div className={`header ${\r\n          small ? \"small\" : \"header\"\r\n        }`}>\r\n            <img className=\"waves \"name=\"waves\" src={WavesBG} alt=\"waves\"/>\r\n\r\n            {width > windowBreakpoint ? \r\n             \"\": <div \r\n              className=\"menu\"\r\n              onClick={handleClick}\r\n              name=\"menu\">\r\n              <img name=\"menu\" width=\"30vmin\" src=\"../assets/menuicon.jpg\" alt=\"menu\"/>\r\n              </div>}\r\n\r\n        \r\n            <div className=\"circle--border\"> \r\n            <div className=\"genre--record\">\r\n                <img width=\"215vmin\" src=\"../assets/artist_icon.png\" alt=\"genre\"/>\r\n            </div>\r\n            </div>\r\n            {/* <div className=\"artist--genre\"><h5>ROCK</h5></div> */}\r\n            <span><h1>USERNAME</h1> \r\n            <div className=\"row\">\r\n            <div className=\"column\">\r\n            <button \r\n                className={`\r\n                ${\r\n                    follow ? \"followed\" : \"follow--button\"\r\n                  } `}\r\n                onClick={handleClick}\r\n                value=\"nofollow\"\r\n                name=\"follow\"\r\n            >{`${\r\n                follow ? \"FOLLOWING\" : \"FOLLOW\"\r\n              } `}</button>\r\n              </div>\r\n            <div className=\"column\">\r\n            <h5>{followers} FOLLOWERS</h5>\r\n            <h5 id=\"following\">{following} FOLLOWING</h5>\r\n            </div></div>\r\n            </span>\r\n\r\n        </div>\r\n        <div className={`profile--body ${\r\n          showMenu ? \"no--profile--view\" : \"\"\r\n        }`}>\r\n        <br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n\r\n        <div className=\"latest--release\">\r\n        <h2>[User]'s Top Find</h2>\r\n            {/* playing song w album cover, song title, and release date */}\r\n           \r\n           <div className=\"music--section\">\r\n           <div className=\"release--playing\">\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                    <div className=\"column rec--album\">\r\n                    <div className=\"song--cover\">\r\n                        <img src=\"../assets/reccover.jpg\" alt=\"albumcover\"/>\r\n                    </div>\r\n\r\n                    <AudioPlayer className=\"AudioPlayer\" \r\n                    // autoPlay \r\n                    src={\"../assets/song7.mp3\"}\r\n                    onPlay={e => console.log(\"onPlay\")}\r\n                    />\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"column rec--desc\">\r\n                        <h3>Song Name</h3>\r\n                        <div className=\"row rec--namegenre\">\r\n                         <div className=\"column rec--artistname\"><h4>ARTIST NAME</h4></div> \r\n                         <div className=\"column rec--genre\"><h4>GENRE</h4></div> \r\n                        </div>\r\n                        <p>Prism church-key yr, seitan kale chips poutine live-edge. Drinking vinegar green juice trust fund hexagon kale chips mustache chicharrones XOXO try-hard everyday carry forage. Brooklyn wolf godard, banh mi messenger bag sustainable gastropub banjo lo-fi brunch umami. Dreamcatcher chambray cray vibecession you probably haven't heard of them farm-to-table.</p>\r\n                    </div>\r\n                    \r\n                    \r\n            </div>\r\n            \r\n\r\n        </div>\r\n        \r\n        <div className=\"discography\">\r\n            {/* albums, singles displayed in a side scrolling section*/}\r\n            <div className=\"music--section\">\r\n                <h4>DISCOVERIES</h4>\r\n                <div className=\"slider discography\">\r\n                {\r\n                    songsList && songsList.map((item, index)=>{\r\n                    return(\r\n                        <SongList\r\n                        key={index}\r\n                        {...item}\r\n                        />\r\n                \r\n                \r\n                ) })}\r\n                </div>\r\n\r\n                \r\n                \r\n            </div>\r\n        \r\n        </div>\r\n        <div className=\"top--genres\">\r\n            <div className=\"music--section\">\r\n                    <h4>TOP GENRES</h4>\r\n                    <div className=\"slider artists\">\r\n                {\r\n                    topGenres && topGenres.map((item, index)=>{\r\n                      console.log(index)\r\n                      return(          \r\n                        <TopGenre\r\n                            key={index}\r\n                            index={index + 1}\r\n                            {...item}\r\n                            /> \r\n                          \r\n                          \r\n\r\n                ) })}\r\n\r\n                \r\n\r\n                    </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n\r\n        \r\n        </div>\r\n       <footer><MusicBar /></footer>\r\n       \r\n\r\n        </section>\r\n\r\n    )\r\n\r\n}","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\ArtistProfile.jsx",["100","101","102"],[],"import React, { useEffect, useState } from \"react\";\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport MusicBar from \"./musicBar/MusicBar\";\r\nimport SideBar from \"./Sidebar/Sidebar\"\r\nimport WavesBG from \"../../Vector.svg\"\r\nimport albumList from \"../../data/albums.json\"\r\nimport relatedArtists from \"../../data/relatedartists.json\"\r\nimport ArtistAlbum from \"./ArtistAlbum\"\r\nimport RelatedArtist from \"./RelatedArtist\";\r\nimport  './ArtistProfile.css';\r\n \r\n// This is how the normal users will see the artist profile\r\nexport default function ArtistProfile(props) {\r\n    const [small, setSmall] = useState(false);\r\n    const [follow, setFollow] = React.useState(false)\r\n    const [followers, setFollowers] = React.useState(200)\r\n    const [showMenu, setShowMenu] = React.useState(false)\r\n    const [mobileMode, setMobileMode] = useState(false)\r\n   \r\n\r\n    const windowBreakpoint = 480;\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"scroll\", () =>\r\n        setSmall(window.pageYOffset > 200)\r\n      );\r\n    }\r\n  }, []); \r\n\r\n    const useViewport = () => {\r\n    const [width, setWidth] = React.useState(window.innerWidth);\r\n  \r\n    React.useEffect(() => {\r\n      const handleWindowResize = () => setWidth(window.innerWidth);\r\n      window.addEventListener(\"resize\", handleWindowResize);\r\n        if(width > windowBreakpoint) {\r\n        setShowMenu(true); }\r\n        else {\r\n            setShowMenu(false)\r\n        }\r\n\r\n      return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n    }, []);\r\n  \r\n    // Return the width so we can use it in our components\r\n    return { width };\r\n  }\r\n \r\n  const { width } = useViewport();\r\n\r\n  let menu;\r\n  if (showMenu) {\r\n         menu = <SideBar />\r\n\r\n  } \r\n\r\n    function handleClick(event)\r\n        \r\n     {\r\n        const {name} = event.target\r\n\r\n        if(name === \"follow\") {\r\n        setFollow(prevFollow => !prevFollow) \r\n        if(!follow) {\r\n            setFollowers(prevFollowers => prevFollowers+1) \r\n        } else {\r\n            setFollowers(prevFollowers => prevFollowers-1) \r\n        }\r\n\r\n        console.log(follow)\r\n\r\n        } else if(name === \"menu\") {\r\n            setShowMenu(prevShowMenu => !prevShowMenu) \r\n            console.log(name) \r\n            \r\n        }\r\n\r\n        \r\n     };\r\n\r\n    return( \r\n        <section>\r\n        {menu}\r\n        <div className={`header ${\r\n          small ? \"small\" : \"header\"\r\n        }`}>\r\n            <img className=\"waves \"name=\"waves\" src={WavesBG} alt=\"waves\"/>\r\n\r\n\r\n            {/* artist name, main genre, follower count, follow button '\r\n                also display the artist's description\r\n            */}\r\n            {width > windowBreakpoint ? \r\n             \"\": <div \r\n              className=\"menu\"\r\n              onClick={handleClick}\r\n              name=\"menu\">\r\n              <img name=\"menu\" width=\"30vmin\" src=\"../assets/menuicon.jpg\" alt=\"menu\"/>\r\n              </div>}\r\n\r\n        \r\n            <div className=\"circle--border\"> \r\n            <div className=\"genre--record\">\r\n                <img width=\"215vmin\" src=\"../assets/artist_icon.png\" alt=\"genre\"/>\r\n            </div>\r\n            </div>\r\n            <div className=\"artist--genre\"><h5>ROCK</h5></div>\r\n            <span><h1>ARTIST NAME</h1> \r\n            <div className=\"row\">\r\n            <div className=\"column\">\r\n            <button \r\n                className={`\r\n                ${\r\n                    follow ? \"followed\" : \"follow--button\"\r\n                  } `}\r\n                onClick={handleClick}\r\n                value=\"nofollow\"\r\n                name=\"follow\"\r\n            >{`${\r\n                follow ? \"FOLLOWING\" : \"FOLLOW\"\r\n              } `}</button>\r\n              </div>\r\n            <div className=\"column\">\r\n            <h5>{followers} FOLLOWERS</h5>\r\n            </div></div>\r\n            </span>\r\n\r\n        </div>\r\n        <div className={`profile--body ${\r\n          showMenu ? \"no--profile--view\" : \"\"\r\n        }`}>\r\n        <br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n\r\n        <div className=\"latest--release\">\r\n        <h2>Artist's Pick</h2>\r\n            {/* playing song w album cover, song title, and release date */}\r\n           \r\n           <div className=\"music--section\">\r\n           <div className=\"release--playing\">\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                    <div className=\"column rec--album\">\r\n                    <div className=\"song--cover\">\r\n                        <img src=\"../assets/reccover.jpg\" alt=\"albumcover\"/>\r\n                    </div>\r\n\r\n                    <AudioPlayer className=\"AudioPlayer\" \r\n                    // autoPlay \r\n                    src={\"../assets/song7.mp3\"}\r\n                    onPlay={e => console.log(\"onPlay\")}\r\n                    />\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"column rec--desc\">\r\n                        <h3>Song Name</h3>\r\n                        <p>Prism church-key yr, seitan kale chips poutine live-edge. Drinking vinegar green juice trust fund hexagon kale chips mustache chicharrones XOXO try-hard everyday carry forage. Brooklyn wolf godard, banh mi messenger bag sustainable gastropub banjo lo-fi brunch umami. Dreamcatcher chambray cray vibecession you probably haven't heard of them farm-to-table.</p>\r\n                    </div>\r\n                    \r\n                    \r\n            </div>\r\n            \r\n\r\n        </div>\r\n        \r\n        <div className=\"discography\">\r\n            {/* albums, singles displayed in a side scrolling section*/}\r\n            <div className=\"music--section\">\r\n                <h4>DISCOGRAPHY</h4>\r\n                <div className=\"slider discography\">\r\n                {\r\n                    albumList && albumList.map((item, index)=>{\r\n                    return(\r\n                        <ArtistAlbum\r\n                        key={index}\r\n                        {...item}\r\n                        />\r\n                \r\n                \r\n                ) })}\r\n                </div>\r\n\r\n                \r\n                \r\n            </div>\r\n        \r\n        </div>\r\n        <div className=\"similar--artists\">\r\n            {/* recommends artists that are similar to the  */}\r\n            <div className=\"music--section\">\r\n                    <h4>SIMILAR ARTISTS</h4>\r\n                    <div className=\"slider artists\">\r\n                {\r\n                    relatedArtists && relatedArtists.map((item, index)=>{\r\n                    return(          \r\n                        <RelatedArtist\r\n                            key={index}\r\n                            {...item}\r\n                            />\r\n\r\n                ) })}\r\n\r\n\r\n\r\n                    </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n\r\n        \r\n        </div>\r\n       <footer><MusicBar /></footer>\r\n       \r\n\r\n        </section>\r\n\r\n    )\r\n\r\n}","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UserProfile\\TopGenres.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\ArtistAlbum.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UserProfile\\SongList.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\RelatedArtist.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\musicBar\\MusicBar.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\ArtistProfile\\Sidebar\\Sidebar.jsx",["103","104","105","106","107","108"],[],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    FaHome,FaBars,FaSearch,FaMusic,FaCloudDownloadAlt,FaRegStar,FaCloudUploadAlt\r\n}from \"react-icons/fa\";\r\nimport {CiStreamOn} from 'react-icons/ci'\r\n// import { Link } from 'react-router-dom';\r\nimport './sidebar.css';\r\nimport img from '../../../imgs/testing.jpg'\r\n\r\n\r\nconst Sidebar = ({children}) => {\r\n    const[isOpen ,setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen (!isOpen);\r\n    const menuItem=[\r\n        {\r\n            path:\"/\",\r\n            name:\"Home\",\r\n            icon:<FaHome/>\r\n        },\r\n        {\r\n            path:\"/stream\",\r\n            name:\"Stream\",\r\n            icon:<CiStreamOn/>\r\n        },\r\n        {\r\n            path:\"/myplaylist\",\r\n            name:\"My Playlist\",\r\n            icon:<FaMusic/>\r\n        },\r\n        {\r\n            path:\"/download\",\r\n            name:\"Download\",\r\n            icon:<FaCloudDownloadAlt/>\r\n        },\r\n        {\r\n            path:\"/top100\",\r\n            name:\"Top 100\",\r\n            icon:<FaRegStar/>\r\n        },\r\n\r\n        \r\n    ]\r\n\r\n    const [showLogo, setShowLogo] = React.useState(window.innerWidth>480);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('resize',()=>{\r\n            setShowLogo(window.innerWidth>480);\r\n        })\r\n    },[])\r\n\r\n    \r\n    return (\r\n        <div className=\"trove__sb-container\">\r\n           <div className=\"trove__sidebar\">\r\n               <div className=\"trove__sb-top_section\">\r\n                    {<img src=\"../assets/logotrove.png\" width='100px' alt=\"\"  />}\r\n                    {/* showLogo ? <h1  className=\"trove__logo\">Trove </h1> : */}\r\n               </div>\r\n               {\r\n                //    menuItem.map((item, index)=>(\r\n                //        <Link to={item.path} key={index} style={{ textDecoration: 'none' }} className=\"trove__sb-link\" >\r\n                //            <div className=\"trove__sb-icon\">{item.icon}</div>\r\n                //            <div className=\"trove__sb-link_text\">{item.name}</div>\r\n                //        </Link>\r\n                //    ))\r\n\r\n                \r\n               }\r\n                {menuItem.map((item, index)=>(\r\n               <div style={{ textDecoration: 'none' }} className=\"trove__sb-link\" >\r\n                    <div className=\"trove__sb-icon\">{item.icon}</div>\r\n                    <div className=\"trove__sb-link_text\">{item.name}</div>\r\n                </div>\r\n                \r\n                ))}\r\n           </div>\r\n           <main>{children}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar; ","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\UploadMusic.jsx",["109","110","111","112","113","114","115","116"],[],"import React, { useEffect, useState } from \"react\";\r\nimport MusicBar from \"../ArtistProfile/musicBar/MusicBar\";\r\nimport SideBar from \"../ArtistProfile/Sidebar/Sidebar\"\r\nimport WavesBG from \"../../Vector.svg\"\r\nimport MusicDetails from \"./MusicDetails\";\r\nimport AddSongs from \"./AddSongs\";\r\nimport { FilePond } from \"filepond\";\r\nimport  './UploadMusic.css'; \r\n \r\n  \r\n// This is how the normal users will see the artist profile\r\nexport default function UploadMusic(props) {\r\n    const [small, setSmall] = useState(false);\r\n    const [follow, setFollow] = React.useState(false)\r\n    const [followers, setFollowers] = React.useState(200)\r\n    const [showMenu, setShowMenu] = React.useState(false)\r\n\r\n   \r\n\r\n    const windowBreakpoint = 480;\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"scroll\", () =>\r\n        setSmall(window.pageYOffset > 200)\r\n      );\r\n    }\r\n  }, []); \r\n\r\n    const useViewport = () => {\r\n    const [width, setWidth] = React.useState(window.innerWidth);\r\n  \r\n    React.useEffect(() => {\r\n      const handleWindowResize = () => setWidth(window.innerWidth);\r\n      window.addEventListener(\"resize\", handleWindowResize);\r\n        if(width > windowBreakpoint) {\r\n        setShowMenu(true); }\r\n        else {\r\n            setShowMenu(false)\r\n        }\r\n\r\n      return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n    }, []);\r\n  \r\n    // Return the width so we can use it in our components\r\n    return { width };\r\n  }\r\n \r\n  const { width } = useViewport();\r\n\r\n  let menu;\r\n  if (showMenu) {\r\n         menu = <SideBar />\r\n\r\n  } \r\n\r\n    function handleClick(event)\r\n        \r\n     {\r\n        const {name} = event.target\r\n\r\n        if(name === \"follow\") {\r\n        setFollow(prevFollow => !prevFollow) \r\n        if(!follow) {\r\n            setFollowers(prevFollowers => prevFollowers+1) \r\n        } else {\r\n            setFollowers(prevFollowers => prevFollowers-1) \r\n        }\r\n\r\n        console.log(follow)\r\n\r\n        } else if(name === \"menu\") {\r\n            setShowMenu(prevShowMenu => !prevShowMenu) \r\n            console.log(name) \r\n            \r\n        }\r\n\r\n        \r\n     };\r\n\r\n    const default_album = \"../../assets/default_upload.png\";\r\n    const [albumCover, setAlbumCover] = React.useState(default_album);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [formData, setFormData] = React.useState(\r\n      {\r\n          songName: \"\",\r\n          albumName: \"\", \r\n          highlightStart: 0,\r\n          highlightStop: 0,\r\n          genre: \"\", \r\n          cover: albumCover,\r\n          releasetype:\"\",\r\n          artist: \"\", \r\n          files: files, \r\n          filePond: files\r\n\r\n\r\n      }\r\n\r\n    );\r\n\r\n    function onChange(event) {\r\n      console.log(event.target.files[0]);\r\n      // setAlbumCover(event.target.files[0])\r\n      setAlbumCover(URL.createObjectURL(event.target.files[0]))\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //   console.log(\"files changed!\");\r\n    //   console.log(files);\r\n    // }, [files]);\r\n\r\n    function handleChange(event) {\r\n      const {name, value, type, checked} = event.target;\r\n\r\n      if(type === \"file\") {\r\n        setAlbumCover(URL.createObjectURL(event.target.files[0]));\r\n\r\n      }\r\n\r\n      setFormData(prevFormData => {\r\n       \r\n        return {\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value,\r\n            files: files\r\n            // [name]: type === \"file\" ? value === setAlbumCover(URL.createObjectURL(event.target.files[0]))  : value\r\n\r\n            \r\n        }\r\n        \r\n      })\r\n\r\n      console.log(formData)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n      event.preventDefault()\r\n      // submitToApi(formData)\r\n      console.log(formData)\r\n    \r\n  }\r\n\r\n    return( \r\n        <section>\r\n        {menu}\r\n        <div className={`header ${\r\n          small ? \"small\" : \"header\"\r\n        }`}>\r\n            <img className=\"waves \"name=\"waves\" src={WavesBG} alt=\"waves\"/>\r\n\r\n\r\n            {/* artist name, main genre, follower count, follow button '\r\n                also display the artist's description\r\n            */}\r\n\r\n              <div>\r\n              <span><h1>SUBMIT MUSIC</h1></span>\r\n              </div>\r\n\r\n              </div>\r\n              <div className=\"upload--form\">\r\n              <form className=\"upload--form\"\r\n                onSubmit={handleSubmit}>\r\n\r\n              <div className=\"row\">\r\n                  <div className=\"upload--image\">\r\n                  <div className=\"column upload--zone\">\r\n                  <img src={albumCover} id=\"album--icon\" alt=\"default_album\"/>\r\n                  </div>\r\n                  <label className=\"custom-file-upload\">\r\n                  <input type=\"file\" name=\"cover\" value=\"\" accept=\"image/*\" className=\"gradient--btn image--btn hide--file\" onChange={handleChange}/> \r\n                      Choose Image <img src=\"../../assets/upload_icon.png\" id=\"upload--icon\" alt=\"upload_icon\"/>\r\n                  </label>\r\n                \r\n                  </div>\r\n                    \r\n                    {/* Comment this component out to aid in viewing the music details section */}\r\n                    {/* <AddSongs \r\n                      handleChange={handleChange}\r\n                      files={files}\r\n                      setFiles={setFiles}\r\n                    /> */}\r\n\r\n                    {/* Uncomment below  to see music details section of form, \r\n                    will be adding feature to navigate through both effectively */}\r\n\r\n                    <MusicDetails\r\n                      handleChange={handleChange}\r\n                      formData={formData}\r\n                      handleSubmit={handleSubmit}\r\n                    /> \r\n                 \r\n                  </div>\r\n              </form>\r\n              </div>\r\n\r\n        \r\n       <footer><MusicBar /></footer>\r\n       \r\n\r\n        </section>\r\n\r\n    )\r\n\r\n}","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\AddSongs.jsx",["117","118"],[],"import React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport SongInfo from \"./SongInfo\"\r\n\r\nimport { FilePond, registerPlugin } from 'react-filepond'\r\n\r\n// Import FilePond styles\r\n// import 'filepond/dist/filepond.min.css'\r\n\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation'\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css'\r\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\r\n\r\n// Register the plugins\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileEncode)\r\n\r\nexport default function AddSongs(props) {\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"files changed!\");\r\n        console.log(props.files);\r\n      }, [props.files]);\r\n\r\n    return (\r\n        <div className=\"column song--form\">\r\n            <h2>ADD SONGS</h2>\r\n            {/* <label className=\"custom-file-upload\">\r\n            <input type=\"file\" name=\"song\" value=\"\" accept=\"image/*\" className=\"gradient--btn image--btn\" onChange={props.handleChange}/> \r\n                Add Song <img src=\"../../assets/upload_icon.png\" id=\"upload--icon\" alt=\"upload_icon\"/>\r\n            </label>  */}\r\n            <div className=\"add--song\">\r\n\r\n            <FilePond\r\n                files={props.files}\r\n                onupdatefiles={props.setFiles}\r\n                allowMultiple={true}\r\n                maxFiles={8}\r\n                //server=\"/\"\r\n                name=\"files\" /* sets the file input name, it's filepond by default */\r\n                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n                allowFileEncode={true}\r\n\r\n\r\n            />\r\n\r\n            {/* <h4>{fileRef.pond.getFiles()}</h4> */}\r\n{/* \r\n            {\r\n                    props.files && props.files.map((item, index)=>{\r\n                    return(          \r\n                        <SongInfo\r\n                            key={index}\r\n                            {...item}\r\n                            files={props.files}\r\n                            />\r\n\r\n                ) })} */}\r\n\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n\r\n    ) \r\n\r\n\r\n};","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\MusicDetails.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadMusic\\SongInfo.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadSong\\UploadSong.jsx",["119","120","121","122","123","124"],[],"import React, { useEffect, useState } from \"react\";\r\nimport MusicBar from \"../ArtistProfile/musicBar/MusicBar\";\r\nimport SideBar from \"../ArtistProfile/Sidebar/Sidebar\"\r\nimport WavesBG from \"../../Vector.svg\"\r\nimport MusicDetails from \"./MusicDetails\";\r\nimport { FilePond } from \"filepond\";\r\nimport  './UploadMusic.css'; \r\n \r\n  \r\n// This is how the normal users will see the artist profile\r\nexport default function UploadMusic(props) {\r\n    const [small, setSmall] = useState(false);\r\n    const [follow, setFollow] = React.useState(false)\r\n    const [followers, setFollowers] = React.useState(200)\r\n    const [showMenu, setShowMenu] = React.useState(false)\r\n\r\n   \r\n\r\n    const windowBreakpoint = 480;\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"scroll\", () =>\r\n        setSmall(window.pageYOffset > 200)\r\n      );\r\n    }\r\n  }, []); \r\n\r\n    const useViewport = () => {\r\n    const [width, setWidth] = React.useState(window.innerWidth);\r\n  \r\n    React.useEffect(() => {\r\n      const handleWindowResize = () => setWidth(window.innerWidth);\r\n      window.addEventListener(\"resize\", handleWindowResize);\r\n        if(width > windowBreakpoint) {\r\n        setShowMenu(true); }\r\n        else {\r\n            setShowMenu(false)\r\n        }\r\n\r\n      return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n    }, []);\r\n  \r\n    // Return the width so we can use it in our components\r\n    return { width };\r\n  }\r\n \r\n  const { width } = useViewport();\r\n\r\n  let menu;\r\n  if (showMenu) {\r\n         menu = <SideBar />\r\n\r\n  } \r\n\r\n    function handleClick(event)\r\n        \r\n     {\r\n        const {name} = event.target\r\n\r\n        if(name === \"follow\") {\r\n        setFollow(prevFollow => !prevFollow) \r\n        if(!follow) {\r\n            setFollowers(prevFollowers => prevFollowers+1) \r\n        } else {\r\n            setFollowers(prevFollowers => prevFollowers-1) \r\n        }\r\n\r\n        console.log(follow)\r\n\r\n        } else if(name === \"menu\") {\r\n            setShowMenu(prevShowMenu => !prevShowMenu) \r\n            console.log(name) \r\n            \r\n        }\r\n\r\n        \r\n     };\r\n\r\n    const default_album = \"../../assets/default_upload.png\";\r\n    const [albumCover, setAlbumCover] = React.useState(default_album);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [formData, setFormData] = React.useState(\r\n      {\r\n          songName: \"\",\r\n          albumName: \"\", \r\n          highlightStart: 0,\r\n          highlightStop: 0,\r\n          genre: \"\", \r\n          cover: albumCover,\r\n          releasetype:\"\",\r\n          releaseYear: 0,\r\n          artist: \"\", \r\n          files: files, \r\n\r\n\r\n      }\r\n\r\n    );\r\n\r\n    function onChange(event) {\r\n      console.log(event.target.files[0]);\r\n      // setAlbumCover(event.target.files[0])\r\n      setAlbumCover(URL.createObjectURL(event.target.files[0]))\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //   console.log(\"files changed!\");\r\n    //   console.log(files);\r\n    // }, [files]);\r\n\r\n    function handleChange(event) {\r\n      const {name, value, type, checked} = event.target;\r\n\r\n      if(type === \"file\") {\r\n        setAlbumCover(URL.createObjectURL(event.target.files[0]));\r\n\r\n      }\r\n\r\n      setFormData(prevFormData => {\r\n       \r\n        return {\r\n            ...prevFormData,\r\n            [name]: type === \"checkbox\" ? checked : value,\r\n            files: files\r\n            // [name]: type === \"file\" ? value === setAlbumCover(URL.createObjectURL(event.target.files[0]))  : value\r\n\r\n            \r\n        }\r\n        \r\n      })\r\n\r\n      console.log(formData)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n      event.preventDefault()\r\n      // submitToApi(formData)\r\n      console.log(formData)\r\n    \r\n  }\r\n\r\n    return( \r\n        <section>\r\n        {menu}\r\n        <div className={`header ${\r\n          small ? \"small\" : \"header\"\r\n        }`}>\r\n            <img className=\"waves \"name=\"waves\" src={WavesBG} alt=\"waves\"/>\r\n\r\n\r\n            {/* artist name, main genre, follower count, follow button '\r\n                also display the artist's description\r\n            */}\r\n\r\n              <div>\r\n              <span><h1>UPLOAD SONG</h1></span>\r\n              </div>\r\n\r\n              </div>\r\n              <div className=\"upload--form\">\r\n              <form className=\"upload--form\"\r\n                onSubmit={handleSubmit}>\r\n\r\n              <div className=\"row\">\r\n                  <div className=\"upload--image\">\r\n                  <div className=\"column upload--zone\">\r\n                  <img src={albumCover} id=\"album--icon\" alt=\"default_album\"/>\r\n                  </div>\r\n                  <label className=\"custom-file-upload\">\r\n                  <input type=\"file\" name=\"cover\" value=\"\" accept=\"image/*\" className=\"gradient--btn image--btn hide--file\" onChange={handleChange}/> \r\n                      Choose Image <img src=\"../../assets/upload_icon.png\" id=\"upload--icon\" alt=\"upload_icon\"/>\r\n                  </label>\r\n                \r\n                  </div>\r\n\r\n                    {/* Uncomment below  to see music details section of form, \r\n                    will be adding feature to navigate through both effectively */}\r\n\r\n                    <MusicDetails\r\n                      handleChange={handleChange}\r\n                      formData={formData}\r\n                      handleSubmit={handleSubmit}\r\n                      files={files}\r\n                      setFiles={setFiles}\r\n\r\n                    /> \r\n                 \r\n                  </div>\r\n              </form>\r\n              </div>\r\n\r\n        \r\n       <footer><MusicBar /></footer>\r\n       \r\n\r\n        </section>\r\n\r\n    )\r\n\r\n}","C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadSong\\MusicDetails.jsx",[],[],"C:\\Users\\javar\\Documents\\GitHub\\Trove\\frontend_pages\\src\\components\\UploadSong\\UploadSongConnect.jsx",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],[],{"ruleId":"147","severity":1,"message":"148","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":21},{"ruleId":"147","severity":1,"message":"151","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":19},{"ruleId":"147","severity":1,"message":"152","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":19},{"ruleId":"147","severity":1,"message":"153","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":26},{"ruleId":"147","severity":1,"message":"154","line":17,"column":23,"nodeType":"149","messageId":"150","endLine":17,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":43,"column":8,"nodeType":"157","endLine":43,"endColumn":10,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"159","line":18,"column":12,"nodeType":"149","messageId":"150","endLine":18,"endColumn":22},{"ruleId":"147","severity":1,"message":"160","line":18,"column":24,"nodeType":"149","messageId":"150","endLine":18,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":44,"column":8,"nodeType":"157","endLine":44,"endColumn":10,"suggestions":"161"},{"ruleId":"147","severity":1,"message":"162","line":3,"column":12,"nodeType":"149","messageId":"150","endLine":3,"endColumn":18},{"ruleId":"147","severity":1,"message":"163","line":3,"column":19,"nodeType":"149","messageId":"150","endLine":3,"endColumn":27},{"ruleId":"147","severity":1,"message":"164","line":3,"column":65,"nodeType":"149","messageId":"150","endLine":3,"endColumn":81},{"ruleId":"147","severity":1,"message":"165","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":11},{"ruleId":"147","severity":1,"message":"166","line":13,"column":11,"nodeType":"149","messageId":"150","endLine":13,"endColumn":17},{"ruleId":"147","severity":1,"message":"167","line":44,"column":12,"nodeType":"149","messageId":"150","endLine":44,"endColumn":20},{"ruleId":"147","severity":1,"message":"168","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"169","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":18},{"ruleId":"147","severity":1,"message":"170","line":15,"column":12,"nodeType":"149","messageId":"150","endLine":15,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":43,"column":8,"nodeType":"157","endLine":43,"endColumn":10,"suggestions":"171"},{"ruleId":"147","severity":1,"message":"172","line":49,"column":11,"nodeType":"149","messageId":"150","endLine":49,"endColumn":16},{"ruleId":"147","severity":1,"message":"173","line":57,"column":14,"nodeType":"149","messageId":"150","endLine":57,"endColumn":25},{"ruleId":"147","severity":1,"message":"174","line":83,"column":19,"nodeType":"149","messageId":"150","endLine":83,"endColumn":27},{"ruleId":"147","severity":1,"message":"175","line":102,"column":14,"nodeType":"149","messageId":"150","endLine":102,"endColumn":22},{"ruleId":"147","severity":1,"message":"176","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"177","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":16},{"ruleId":"147","severity":1,"message":"169","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":18},{"ruleId":"147","severity":1,"message":"170","line":14,"column":12,"nodeType":"149","messageId":"150","endLine":14,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":42,"column":8,"nodeType":"157","endLine":42,"endColumn":10,"suggestions":"178"},{"ruleId":"147","severity":1,"message":"172","line":48,"column":11,"nodeType":"149","messageId":"150","endLine":48,"endColumn":16},{"ruleId":"147","severity":1,"message":"173","line":56,"column":14,"nodeType":"149","messageId":"150","endLine":56,"endColumn":25},{"ruleId":"147","severity":1,"message":"175","line":101,"column":14,"nodeType":"149","messageId":"150","endLine":101,"endColumn":22},{"ruleId":"147","severity":1,"message":"169","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":18},{"ruleId":"147","severity":1,"message":"179","line":13,"column":11,"nodeType":"149","messageId":"150","endLine":13,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":20,"column":27,"nodeType":"182","messageId":"183","endLine":20,"endColumn":28,"suggestions":"184"},{"ruleId":"180","severity":1,"message":"185","line":20,"column":33,"nodeType":"182","messageId":"183","endLine":20,"endColumn":34,"suggestions":"186"},{"ruleId":"180","severity":1,"message":"187","line":20,"column":39,"nodeType":"182","messageId":"183","endLine":20,"endColumn":40,"suggestions":"188"},{"ruleId":"180","severity":1,"message":"189","line":20,"column":49,"nodeType":"182","messageId":"183","endLine":20,"endColumn":50,"suggestions":"190"},{"ruleId":"180","severity":1,"message":"191","line":20,"column":56,"nodeType":"182","messageId":"183","endLine":20,"endColumn":57,"suggestions":"192"},{"ruleId":"180","severity":1,"message":"193","line":20,"column":76,"nodeType":"182","messageId":"183","endLine":20,"endColumn":77,"suggestions":"194"},{"ruleId":"147","severity":1,"message":"195","line":25,"column":23,"nodeType":"149","messageId":"150","endLine":25,"endColumn":31},{"ruleId":"147","severity":1,"message":"196","line":26,"column":23,"nodeType":"149","messageId":"150","endLine":26,"endColumn":31},{"ruleId":"147","severity":1,"message":"197","line":27,"column":24,"nodeType":"149","messageId":"150","endLine":27,"endColumn":33},{"ruleId":"147","severity":1,"message":"198","line":28,"column":23,"nodeType":"149","messageId":"150","endLine":28,"endColumn":31},{"ruleId":"147","severity":1,"message":"199","line":31,"column":16,"nodeType":"149","messageId":"150","endLine":31,"endColumn":27},{"ruleId":"147","severity":1,"message":"200","line":32,"column":16,"nodeType":"149","messageId":"150","endLine":32,"endColumn":30},{"ruleId":"147","severity":1,"message":"201","line":34,"column":15,"nodeType":"149","messageId":"150","endLine":34,"endColumn":35},{"ruleId":"147","severity":1,"message":"202","line":38,"column":15,"nodeType":"149","messageId":"150","endLine":38,"endColumn":36},{"ruleId":"147","severity":1,"message":"170","line":116,"column":12,"nodeType":"149","messageId":"150","endLine":116,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":144,"column":8,"nodeType":"157","endLine":144,"endColumn":10,"suggestions":"203"},{"ruleId":"147","severity":1,"message":"172","line":150,"column":11,"nodeType":"149","messageId":"150","endLine":150,"endColumn":16},{"ruleId":"147","severity":1,"message":"173","line":158,"column":14,"nodeType":"149","messageId":"150","endLine":158,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":199,"column":9,"nodeType":"206","messageId":"207","endLine":199,"endColumn":14},{"ruleId":"204","severity":1,"message":"208","line":200,"column":9,"nodeType":"206","messageId":"207","endLine":200,"endColumn":15},"no-unused-vars","'ArtistProfile' is defined but never used.","Identifier","unusedVar","'UserProfile' is defined but never used.","'UploadMusic' is defined but never used.","'UploadMusicConnect' is defined but never used.","'setFollowing' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["209"],"'mobileMode' is assigned a value but never used.","'setMobileMode' is assigned a value but never used.",["210"],"'FaBars' is defined but never used.","'FaSearch' is defined but never used.","'FaCloudUploadAlt' is defined but never used.","'img' is defined but never used.","'toggle' is assigned a value but never used.","'showLogo' is assigned a value but never used.","'AddSongs' is defined but never used.","'FilePond' is defined but never used.","'followers' is assigned a value but never used.",["211"],"'width' is assigned a value but never used.","'handleClick' is defined but never used.","'setFiles' is assigned a value but never used.","'onChange' is defined but never used.","'ReactDOM' is defined but never used.","'SongInfo' is defined but never used.",["212"],"'UploadSong' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\U.","Literal","unnecessaryEscape",["213","214"],"Unnecessary escape character: \\j.",["215","216"],"Unnecessary escape character: \\D.",["217","218"],"Unnecessary escape character: \\G.",["219","220"],"Unnecessary escape character: \\T.",["221","222"],"Unnecessary escape character: \\k.",["223","224"],"'setTitle' is assigned a value but never used.","'setGenre' is assigned a value but never used.","'setArtist' is assigned a value but never used.","'setAlbum' is assigned a value but never used.","'isUploading' is assigned a value but never used.","'uploadProgress' is assigned a value but never used.","'handleSongFileChange' is assigned a value but never used.","'handleImageFileChange' is assigned a value but never used.",["225"],"no-dupe-keys","Duplicate key 'genre'.","ObjectExpression","unexpected","Duplicate key 'artist'.",{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},{"desc":"226","fix":"229"},{"desc":"226","fix":"230"},{"messageId":"231","fix":"232","desc":"233"},{"messageId":"234","fix":"235","desc":"236"},{"messageId":"231","fix":"237","desc":"233"},{"messageId":"234","fix":"238","desc":"236"},{"messageId":"231","fix":"239","desc":"233"},{"messageId":"234","fix":"240","desc":"236"},{"messageId":"231","fix":"241","desc":"233"},{"messageId":"234","fix":"242","desc":"236"},{"messageId":"231","fix":"243","desc":"233"},{"messageId":"234","fix":"244","desc":"236"},{"messageId":"231","fix":"245","desc":"233"},{"messageId":"234","fix":"246","desc":"236"},{"desc":"226","fix":"247"},"Update the dependencies array to be: [width]",{"range":"248","text":"249"},{"range":"250","text":"249"},{"range":"251","text":"249"},{"range":"252","text":"249"},"removeEscape",{"range":"253","text":"254"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"255","text":"256"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"257","text":"254"},{"range":"258","text":"256"},{"range":"259","text":"254"},{"range":"260","text":"256"},{"range":"261","text":"254"},{"range":"262","text":"256"},{"range":"263","text":"254"},{"range":"264","text":"256"},{"range":"265","text":"254"},{"range":"266","text":"256"},{"range":"267","text":"249"},[1558,1560],"[width]",[1555,1557],[1403,1405],[1367,1369],[713,714],"",[713,713],"\\",[719,720],[719,719],[725,726],[725,725],[735,736],[735,735],[742,743],[742,742],[762,763],[762,762],[5068,5070]]